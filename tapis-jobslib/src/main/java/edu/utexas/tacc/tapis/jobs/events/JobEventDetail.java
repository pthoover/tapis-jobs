package edu.utexas.tacc.tapis.jobs.events;

import edu.utexas.tacc.tapis.files.client.gen.model.TransferStatusEnum;
import edu.utexas.tacc.tapis.jobs.dao.JobsDao;
import edu.utexas.tacc.tapis.jobs.events.JobEventManager.SubscriptionActions;
import edu.utexas.tacc.tapis.jobs.model.Job;
import edu.utexas.tacc.tapis.jobs.model.enumerations.JobStatusType;
import edu.utexas.tacc.tapis.shared.utils.TapisGsonUtils;

/** This class generates the event detail content for all event types.  All
 * event content except for that of USER events are generated by Jobs and are
 * serialized JSON objects.  User events are created by the users who are 
 * free to format the detail data using any text format.  
 * 
 * @author rcardone
 */
public final class JobEventDetail 
{
    /* ********************************************************************** */
    /*                             Public Methods                             */
    /* ********************************************************************** */
    /* ---------------------------------------------------------------------- */
    /* getTransferEventDetail:                                                */
    /* ---------------------------------------------------------------------- */
    static String getTransferEventDetail(Job job, TransferStatusEnum transferStatus,
                                          String transactionId)
    {
        var d = new JobTransferDetail();
        d.setBaseFields(job);
        if (transferStatus != null) d.transferStatus = transferStatus.name();
        d.transactionId = transactionId;
        return TapisGsonUtils.getGson().toJson(d);
    }
    
    /* ---------------------------------------------------------------------- */
    /* getErrorEventDetail:                                                   */
    /* ---------------------------------------------------------------------- */
    static String getErrorEventDetail(String jobUuid, JobStatusType status,
                                      JobsDao jobsDao)
    {
        // Get the name and owner from the database. The result is
        // never null but the fields contained within can be null.
        var nameOwner = jobsDao.getNameOwnerByUUIDSafe(jobUuid);
        
        var d = new JobErrorDetail();
        d.jobUuid  = jobUuid;
        d.jobName  = nameOwner.name;
        d.jobOwner = nameOwner.owner;
        if (status != null) d.jobStatus = status.name();
        return TapisGsonUtils.getGson().toJson(d);
    }
    
    /* ---------------------------------------------------------------------- */
    /* getNewStatusEventDetail:                                               */
    /* ---------------------------------------------------------------------- */
    static String getNewStatusEventDetail(Job job, JobStatusType newStatus, 
                                          JobStatusType oldStatus)
    {
        var d = new JobNewStatusDetail();
        d.setBaseFields(job);
        if (newStatus != null) d.newJobStatus = newStatus.name();
        if (oldStatus != null) d.oldJobStatus = oldStatus.name();
        return TapisGsonUtils.getGson().toJson(d);
    }

    /* ---------------------------------------------------------------------- */
    /* getFinalEventDetail:                                                   */
    /* ---------------------------------------------------------------------- */
    static String getFinalEventDetail(Job job)
    {
        var d = new JobFinalDetail();
        d.setBaseFields(job);
        d.jobStatus    = job.getStatus().name();
        d.blockedCount = job.getBlockedCount();
        d.remoteJobId  = job.getRemoteJobId();
        d.remoteJobId2 = job.getRemoteJobId2();
        if (job.getRemoteOutcome() != null) d.remoteOutcome = job.getRemoteOutcome().name();
        d.remoteResultInfo = job.getRemoteResultInfo();
        d.remoteQueue      = job.getRemoteQueue();
        if (job.getRemoteSubmitted() != null) d.remoteSubmitted = job.getRemoteSubmitted().toString();
        if (job.getRemoteStarted() != null)   d.remoteSubmitted = job.getRemoteStarted().toString(); 
        if (job.getRemoteEnded() != null)     d.remoteSubmitted = job.getRemoteEnded().toString(); 
        return TapisGsonUtils.getGson().toJson(d);
    }

    /* ---------------------------------------------------------------------- */
    /* getSubmitSubscriptionEventDetail:                                      */
    /* ---------------------------------------------------------------------- */
    static String getSubmitSubscriptionEventDetail(Job job, SubscriptionActions action, 
                                                   int numSubscriptions)
    {
        var d = new JobSubscriptionDetail();
        d.setBaseFields(job);
        if (action != null) d.action = action.name();
        d.numSubscriptions = numSubscriptions;
        return TapisGsonUtils.getGson().toJson(d);
    }
    
    /* ---------------------------------------------------------------------- */
    /* getSubscriptionEventDetail:                                            */
    /* ---------------------------------------------------------------------- */
    static String getSubscriptionEventDetail(String jobUuid, String tenant, 
                                             SubscriptionActions action, 
                                             int numSubscriptions, JobsDao jobsDao)
    {
        // Get the name and owner from the database. The result is
        // never null but the fields contained within can be null.
        var nameOwner = jobsDao.getNameOwnerByUUIDSafe(jobUuid);
        
        var d = new JobSubscriptionDetail();
        d.jobUuid  = jobUuid;
        d.jobName  = nameOwner.name;
        d.jobOwner = nameOwner.owner;
        if (action != null) d.action = action.name();
        d.numSubscriptions = numSubscriptions;
        return TapisGsonUtils.getGson().toJson(d);
    }
    
    /* ---------------------------------------------------------------------- */
    /* getShareEventDetail:                                                   */
    /* ---------------------------------------------------------------------- */
    static String getShareEventDetail(String jobUuid, String tenant, 
                                      String resourceType, String shareType, 
                                      String grantee, String grantor, JobsDao jobsDao)
    {
        // Get the name and owner from the database. The result is
        // never null but the fields contained within can be null.
        var nameOwner = jobsDao.getNameOwnerByUUIDSafe(jobUuid);
        
        var d = new JobShareDetail();
        d.jobUuid  = jobUuid;
        d.jobName  = nameOwner.name;
        d.jobOwner = nameOwner.owner;
        d.resourceType = resourceType;
        d.shareType    = shareType;
        d.grantee      = grantee;
        d.grantor      = grantor;
        return TapisGsonUtils.getGson().toJson(d);
    }
    
    /* ********************************************************************** */
    /*                         JobBaseDetail class                            */
    /* ********************************************************************** */
    public static class JobBaseDetail 
    {
        public String jobName;
        public String jobUuid;
        public String jobOwner;
        
        void setBaseFields(Job job)
        {
            jobName     = job.getName();
            jobUuid     = job.getUuid();
            jobOwner    = job.getOwner();
        }
    }

    /* ********************************************************************** */
    /*                        JobTransferDetail class                         */
    /* ********************************************************************** */
    public static class JobTransferDetail 
     extends JobBaseDetail
    {
        String transferStatus;
        String transactionId;
    }

    /* ********************************************************************** */
    /*                       JobErrorDetail class                             */
    /* ********************************************************************** */
    public static class JobErrorDetail 
     extends JobBaseDetail
    {
       public String jobStatus;
    }
    
    /* ********************************************************************** */
    /*                       JobFinalDetail class                             */
    /* ********************************************************************** */
    public static class JobFinalDetail 
     extends JobBaseDetail
   {
       public String jobStatus;
       public int    blockedCount;
       public String remoteJobId;
       public String remoteJobId2;
       public String remoteOutcome;
       public String remoteResultInfo;
       public String remoteQueue;
       public String remoteSubmitted;
       public String remoteStarted;
       public String remoteEnded;
   }
    
    /* ********************************************************************** */
    /*                       JobSubscriptionDetail class                      */
    /* ********************************************************************** */
    public static class JobSubscriptionDetail 
     extends JobBaseDetail
    {
       public String action;
       public int    numSubscriptions;
    }
    
    /* ********************************************************************** */
    /*                       JobNewStatusDetail class                         */
    /* ********************************************************************** */
    public static class JobNewStatusDetail 
     extends JobBaseDetail
   {
       public String newJobStatus;
       public String oldJobStatus;
   }

    /* ********************************************************************** */
    /*                          JobShareDetail class                          */
    /* ********************************************************************** */
    public static class JobShareDetail 
     extends JobBaseDetail
   {
       public String resourceType;
       public String shareType;
       public String grantor;
       public String grantee;
   }
}
